generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id         Int        @id @default(autoincrement())
    email      String     @unique
    password   String
    first_name String
    Category   Category[]
    Expense    Expense[]
    Ledger     Ledger[]
    Account    Account[]
}

model Expense {
    id             Int       @id @default(autoincrement())
    total_expenses Int
    date_started   DateTime
    date_ended     DateTime?
    created_at     DateTime  @default(now())
    updated_at     DateTime  @updatedAt
    userId         Int?
    user           User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
    id            Int      @id @default(autoincrement())
    category_name String
    userId        Int
    user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    Ledger        Ledger[]
}

model Ledger {
    transaction_id     Int      @id @default(autoincrement())
    userId             Int
    category_id        Int
    transaction_amount Int
    transaction_date   DateTime
    account_id         Int
    description        String?
    category           Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
    user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    account            Account  @relation(fields: [account_id], references: [account_id], onDelete: Cascade)
}

model Account {
    account_id       Int         @id @default(autoincrement())
    userId           Int
    account_type     AccountType
    bank_name        String?
    total_amount     Int?        @default(0)
    credit_limit     Int?
    available_credit Int?
    user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
    Ledger           Ledger[]
}

//Types

enum AccountType {
    credit
    debit
    cash
}
